//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CaseMangement.Repository.Context
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CaseManagementEntities : DbContext
    {
        public CaseManagementEntities()
            : base("name=CaseManagementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountingPeriod> AccountingPeriods { get; set; }
        public virtual DbSet<Announcement> Announcements { get; set; }
        public virtual DbSet<ASPStateTempApplication> ASPStateTempApplications { get; set; }
        public virtual DbSet<ASPStateTempSession> ASPStateTempSessions { get; set; }
        public virtual DbSet<Audit_AccountingPeriods> Audit_AccountingPeriods { get; set; }
        public virtual DbSet<Audit_ClientCallCodes> Audit_ClientCallCodes { get; set; }
        public virtual DbSet<Audit_ClientContactNotes> Audit_ClientContactNotes { get; set; }
        public virtual DbSet<Audit_ClientEducation> Audit_ClientEducation { get; set; }
        public virtual DbSet<Audit_ClientFederalIncidentReports> Audit_ClientFederalIncidentReports { get; set; }
        public virtual DbSet<Audit_ClientIncidentReports> Audit_ClientIncidentReports { get; set; }
        public virtual DbSet<Audit_ClientPositiveIncidents> Audit_ClientPositiveIncidents { get; set; }
        public virtual DbSet<Audit_ClientProgramConfinements> Audit_ClientProgramConfinements { get; set; }
        public virtual DbSet<Audit_ClientProgramEnrollments> Audit_ClientProgramEnrollments { get; set; }
        public virtual DbSet<Audit_ClientProgramFinancials> Audit_ClientProgramFinancials { get; set; }
        public virtual DbSet<Audit_ClientProgramPhases> Audit_ClientProgramPhases { get; set; }
        public virtual DbSet<Audit_ClientProgramPlacements> Audit_ClientProgramPlacements { get; set; }
        public virtual DbSet<Audit_ClientProgramStatus> Audit_ClientProgramStatus { get; set; }
        public virtual DbSet<Audit_ClientRooms> Audit_ClientRooms { get; set; }
        public virtual DbSet<Audit_Clients> Audit_Clients { get; set; }
        public virtual DbSet<Audit_ClientSecurityFlags> Audit_ClientSecurityFlags { get; set; }
        public virtual DbSet<Audit_ClientSecurityProcedures> Audit_ClientSecurityProcedures { get; set; }
        public virtual DbSet<Audit_ClientSessionNotes> Audit_ClientSessionNotes { get; set; }
        public virtual DbSet<Audit_ClientStatus> Audit_ClientStatus { get; set; }
        public virtual DbSet<Audit_ClientTreatmentPlanActions> Audit_ClientTreatmentPlanActions { get; set; }
        public virtual DbSet<Audit_ClientTreatmentPlanGoals> Audit_ClientTreatmentPlanGoals { get; set; }
        public virtual DbSet<Audit_ClientTreatmentPlans> Audit_ClientTreatmentPlans { get; set; }
        public virtual DbSet<Audit_ClientVehicles> Audit_ClientVehicles { get; set; }
        public virtual DbSet<Audit_Tasks> Audit_Tasks { get; set; }
        public virtual DbSet<CallCode> CallCodes { get; set; }
        public virtual DbSet<CallCodeSchedule> CallCodeSchedules { get; set; }
        public virtual DbSet<CheckRegister> CheckRegisters { get; set; }
        public virtual DbSet<ClientAddress> ClientAddresses { get; set; }
        public virtual DbSet<ClientAlert> ClientAlerts { get; set; }
        public virtual DbSet<ClientAlternateName> ClientAlternateNames { get; set; }
        public virtual DbSet<ClientArrestInfo> ClientArrestInfoes { get; set; }
        public virtual DbSet<ClientAssessmentFile> ClientAssessmentFiles { get; set; }
        public virtual DbSet<ClientAssessment> ClientAssessments { get; set; }
        public virtual DbSet<ClientBike> ClientBikes { get; set; }
        public virtual DbSet<ClientBondInfo> ClientBondInfoes { get; set; }
        public virtual DbSet<ClientCallCode> ClientCallCodes { get; set; }
        public virtual DbSet<ClientCaseFile> ClientCaseFiles { get; set; }
        public virtual DbSet<ClientCommunityFinancialDetail> ClientCommunityFinancialDetails { get; set; }
        public virtual DbSet<ClientCommunityFinancial> ClientCommunityFinancials { get; set; }
        public virtual DbSet<ClientCommunityFinancialsQuickPay> ClientCommunityFinancialsQuickPays { get; set; }
        public virtual DbSet<ClientCommunityFinancialToDo> ClientCommunityFinancialToDos { get; set; }
        public virtual DbSet<ClientConflict> ClientConflicts { get; set; }
        public virtual DbSet<ClientContactNote> ClientContactNotes { get; set; }
        public virtual DbSet<ClientDiagnos> ClientDiagnoses { get; set; }
        public virtual DbSet<ClientDocket> ClientDockets { get; set; }
        public virtual DbSet<ClientDrugsOfChoice> ClientDrugsOfChoices { get; set; }
        public virtual DbSet<ClientDrugTreatment> ClientDrugTreatments { get; set; }
        public virtual DbSet<ClientDrugUseHistory> ClientDrugUseHistories { get; set; }
        public virtual DbSet<ClientEducation> ClientEducations { get; set; }
        public virtual DbSet<ClientEmergencyContact> ClientEmergencyContacts { get; set; }
        public virtual DbSet<ClientEmployment> ClientEmployments { get; set; }
        public virtual DbSet<ClientEmploymentSkill> ClientEmploymentSkills { get; set; }
        public virtual DbSet<ClientFederalIncidentReport> ClientFederalIncidentReports { get; set; }
        public virtual DbSet<ClientGroupRegistration> ClientGroupRegistrations { get; set; }
        public virtual DbSet<ClientIdentifier> ClientIdentifiers { get; set; }
        public virtual DbSet<ClientIdentifierType> ClientIdentifierTypes { get; set; }
        public virtual DbSet<ClientIncidentReport> ClientIncidentReports { get; set; }
        public virtual DbSet<ClientInventory> ClientInventories { get; set; }
        public virtual DbSet<ClientJobHistory> ClientJobHistories { get; set; }
        public virtual DbSet<ClientLeaf> ClientLeaves { get; set; }
        public virtual DbSet<ClientLeaveSchedule> ClientLeaveSchedules { get; set; }
        public virtual DbSet<ClientMedicationLog> ClientMedicationLogs { get; set; }
        public virtual DbSet<ClientMovement> ClientMovements { get; set; }
        public virtual DbSet<ClientOffens> ClientOffenses { get; set; }
        public virtual DbSet<ClientOTCMedicationLog> ClientOTCMedicationLogs { get; set; }
        public virtual DbSet<ClientOtherEmployment> ClientOtherEmployments { get; set; }
        public virtual DbSet<ClientOtherInfo> ClientOtherInfoes { get; set; }
        public virtual DbSet<ClientPassSite> ClientPassSites { get; set; }
        public virtual DbSet<ClientPhone> ClientPhones { get; set; }
        public virtual DbSet<ClientPhoto> ClientPhotos { get; set; }
        public virtual DbSet<ClientPhysicalCharacteristic> ClientPhysicalCharacteristics { get; set; }
        public virtual DbSet<ClientPositiveIncident> ClientPositiveIncidents { get; set; }
        public virtual DbSet<ClientPrescription> ClientPrescriptions { get; set; }
        public virtual DbSet<ClientProgramConfinement> ClientProgramConfinements { get; set; }
        public virtual DbSet<ClientProgramEnrollmentDocket> ClientProgramEnrollmentDockets { get; set; }
        public virtual DbSet<ClientProgramEnrollment> ClientProgramEnrollments { get; set; }
        public virtual DbSet<ClientProgramFinancial> ClientProgramFinancials { get; set; }
        public virtual DbSet<ClientProgramPhas> ClientProgramPhases { get; set; }
        public virtual DbSet<ClientProgramPlacementHour> ClientProgramPlacementHours { get; set; }
        public virtual DbSet<ClientProgramPlacement> ClientProgramPlacements { get; set; }
        public virtual DbSet<ClientProgramStatu> ClientProgramStatus { get; set; }
        public virtual DbSet<ClientResidentFinancialAccountDetail> ClientResidentFinancialAccountDetails { get; set; }
        public virtual DbSet<ClientResidentFinancialAccount> ClientResidentFinancialAccounts { get; set; }
        public virtual DbSet<ClientRoom> ClientRooms { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<ClientScreeningApprovalCondition> ClientScreeningApprovalConditions { get; set; }
        public virtual DbSet<ClientScreeningMedication> ClientScreeningMedications { get; set; }
        public virtual DbSet<ClientScreeningOffens> ClientScreeningOffenses { get; set; }
        public virtual DbSet<ClientScreeningPreviousDenial> ClientScreeningPreviousDenials { get; set; }
        public virtual DbSet<ClientScreeningProgram> ClientScreeningPrograms { get; set; }
        public virtual DbSet<ClientScreeningPsychCondition> ClientScreeningPsychConditions { get; set; }
        public virtual DbSet<ClientScreening> ClientScreenings { get; set; }
        public virtual DbSet<ClientSecurityFlag> ClientSecurityFlags { get; set; }
        public virtual DbSet<ClientSecurityLevel> ClientSecurityLevels { get; set; }
        public virtual DbSet<ClientSecurityProcedure> ClientSecurityProcedures { get; set; }
        public virtual DbSet<ClientSessionNoteCurriculum> ClientSessionNoteCurriculums { get; set; }
        public virtual DbSet<ClientSessionNote> ClientSessionNotes { get; set; }
        public virtual DbSet<ClientSignature> ClientSignatures { get; set; }
        public virtual DbSet<ClientSignOutHold> ClientSignOutHolds { get; set; }
        public virtual DbSet<ClientStatu> ClientStatus { get; set; }
        public virtual DbSet<ClientTreatmentPlanAction> ClientTreatmentPlanActions { get; set; }
        public virtual DbSet<ClientTreatmentPlanGoal> ClientTreatmentPlanGoals { get; set; }
        public virtual DbSet<ClientTreatmentPlan> ClientTreatmentPlans { get; set; }
        public virtual DbSet<ClientVehicle> ClientVehicles { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<CompanyFinancialAccount> CompanyFinancialAccounts { get; set; }
        public virtual DbSet<CompanyFinancial> CompanyFinancials { get; set; }
        public virtual DbSet<ConfinementType> ConfinementTypes { get; set; }
        public virtual DbSet<ContactNoteTemplate> ContactNoteTemplates { get; set; }
        public virtual DbSet<CustomField> CustomFields { get; set; }
        public virtual DbSet<CustomFieldsData> CustomFieldsDatas { get; set; }
        public virtual DbSet<Destination> Destinations { get; set; }
        public virtual DbSet<EmailSubscription> EmailSubscriptions { get; set; }
        public virtual DbSet<Employer> Employers { get; set; }
        public virtual DbSet<FederalIncidentReportCode> FederalIncidentReportCodes { get; set; }
        public virtual DbSet<FeeType> FeeTypes { get; set; }
        public virtual DbSet<FormEntity> FormEntities { get; set; }
        public virtual DbSet<FormField> FormFields { get; set; }
        public virtual DbSet<FormQuery> FormQueries { get; set; }
        public virtual DbSet<GlobalCodeCategory> GlobalCodeCategories { get; set; }
        public virtual DbSet<GlobalCode> GlobalCodes { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<Headcount> Headcounts { get; set; }
        public virtual DbSet<HeadcountDetail> HeadcountDetails { get; set; }
        public virtual DbSet<IdentifierType> IdentifierTypes { get; set; }
        public virtual DbSet<IncidentReportCode> IncidentReportCodes { get; set; }
        public virtual DbSet<InventoryType> InventoryTypes { get; set; }
        public virtual DbSet<JobScheduleLog> JobScheduleLogs { get; set; }
        public virtual DbSet<LetterTemplate> LetterTemplates { get; set; }
        public virtual DbSet<MailBox> MailBoxes { get; set; }
        public virtual DbSet<MedicationBin> MedicationBins { get; set; }
        public virtual DbSet<Medication> Medications { get; set; }
        public virtual DbSet<MedicationSubClass> MedicationSubClasses { get; set; }
        public virtual DbSet<Offens> Offenses { get; set; }
        public virtual DbSet<PaymentLocation> PaymentLocations { get; set; }
        public virtual DbSet<PaymentType> PaymentTypes { get; set; }
        public virtual DbSet<Physician> Physicians { get; set; }
        public virtual DbSet<PlacementSite> PlacementSites { get; set; }
        public virtual DbSet<Portlet> Portlets { get; set; }
        public virtual DbSet<ProgramPhas> ProgramPhases { get; set; }
        public virtual DbSet<Program> Programs { get; set; }
        public virtual DbSet<Queue> Queues { get; set; }
        public virtual DbSet<QueueStepAction> QueueStepActions { get; set; }
        public virtual DbSet<QueueStep> QueueSteps { get; set; }
        public virtual DbSet<RecurringWorkFlowActionParameter> RecurringWorkFlowActionParameters { get; set; }
        public virtual DbSet<RecurringWorkFlowAction> RecurringWorkFlowActions { get; set; }
        public virtual DbSet<RecurringWorkFlowAssociatedColumn> RecurringWorkFlowAssociatedColumns { get; set; }
        public virtual DbSet<RecurringWorkFlow> RecurringWorkFlows { get; set; }
        public virtual DbSet<RecurringWorkFlowStepAction> RecurringWorkFlowStepActions { get; set; }
        public virtual DbSet<RecurringWorkFlowType> RecurringWorkFlowTypes { get; set; }
        public virtual DbSet<ReferralSource> ReferralSources { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<ResidentialRoomSearchSchedule> ResidentialRoomSearchSchedules { get; set; }
        public virtual DbSet<RoleDocumentType> RoleDocumentTypes { get; set; }
        public virtual DbSet<RolePermission> RolePermissions { get; set; }
        public virtual DbSet<RoleReport> RoleReports { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<RoleTransaction> RoleTransactions { get; set; }
        public virtual DbSet<RoomBed> RoomBeds { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<RoomSearchSchedule> RoomSearchSchedules { get; set; }
        public virtual DbSet<ScreenHelp> ScreenHelps { get; set; }
        public virtual DbSet<Screen> Screens { get; set; }
        public virtual DbSet<SecurityFlag> SecurityFlags { get; set; }
        public virtual DbSet<SecurityLevel> SecurityLevels { get; set; }
        public virtual DbSet<SecurityProcedureRequirement> SecurityProcedureRequirements { get; set; }
        public virtual DbSet<ShiftNoteClient> ShiftNoteClients { get; set; }
        public virtual DbSet<ShiftNoteRelationship> ShiftNoteRelationships { get; set; }
        public virtual DbSet<ShiftNote> ShiftNotes { get; set; }
        public virtual DbSet<ShiftNoteType> ShiftNoteTypes { get; set; }
        public virtual DbSet<SpecialSecuritySetup> SpecialSecuritySetups { get; set; }
        public virtual DbSet<SQLTableAndColumn> SQLTableAndColumns { get; set; }
        public virtual DbSet<SQLValue> SQLValues { get; set; }
        public virtual DbSet<StaffGroup> StaffGroups { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TabSource> TabSources { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<TempActionScript> TempActionScripts { get; set; }
        public virtual DbSet<TerminationReason> TerminationReasons { get; set; }
        public virtual DbSet<TraceCheckRegister> TraceCheckRegisters { get; set; }
        public virtual DbSet<TransactionCategoriesRF> TransactionCategoriesRFs { get; set; }
        public virtual DbSet<TransactionType> TransactionTypes { get; set; }
        public virtual DbSet<TransactionTypesCF> TransactionTypesCFs { get; set; }
        public virtual DbSet<TransactionTypesRF> TransactionTypesRFs { get; set; }
        public virtual DbSet<TreatmentGroupCalendar> TreatmentGroupCalendars { get; set; }
        public virtual DbSet<TreatmentGroupCurriculum> TreatmentGroupCurriculums { get; set; }
        public virtual DbSet<TreatmentGroup> TreatmentGroups { get; set; }
        public virtual DbSet<TreatmentPlanActionTemplate> TreatmentPlanActionTemplates { get; set; }
        public virtual DbSet<TreatmentPlanGoalTemplate> TreatmentPlanGoalTemplates { get; set; }
        public virtual DbSet<TreatmentPlanTemplate> TreatmentPlanTemplates { get; set; }
        public virtual DbSet<UserPortlet> UserPortlets { get; set; }
        public virtual DbSet<UserQuickLink> UserQuickLinks { get; set; }
        public virtual DbSet<UserReport> UserReports { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserUploadFolder> UserUploadFolders { get; set; }
        public virtual DbSet<VisitorLog> VisitorLogs { get; set; }
        public virtual DbSet<Visitor> Visitors { get; set; }
        public virtual DbSet<WordTemplateEntity> WordTemplateEntities { get; set; }
        public virtual DbSet<WordTemplate> WordTemplates { get; set; }
        public virtual DbSet<WorkFlowActionParameter> WorkFlowActionParameters { get; set; }
        public virtual DbSet<WorkFlowAction> WorkFlowActions { get; set; }
        public virtual DbSet<WorkFlowEventAssociatedColumn> WorkFlowEventAssociatedColumns { get; set; }
        public virtual DbSet<WorkflowEventOffsetField> WorkflowEventOffsetFields { get; set; }
        public virtual DbSet<WorkFlowEvent> WorkFlowEvents { get; set; }
        public virtual DbSet<Workflow> Workflows { get; set; }
        public virtual DbSet<WorkFlowStepAction> WorkFlowStepActions { get; set; }
        public virtual DbSet<WorkflowStep> WorkflowSteps { get; set; }
        public virtual DbSet<InstallInfo> InstallInfoes { get; set; }
        public virtual DbSet<TempCheckPreview> TempCheckPreviews { get; set; }
        public virtual DbSet<rClientScreeningApplication> rClientScreeningApplications { get; set; }
        public virtual DbSet<vCallCode> vCallCodes { get; set; }
        public virtual DbSet<vCallCodeSchedule> vCallCodeSchedules { get; set; }
        public virtual DbSet<vClientAddress> vClientAddresses { get; set; }
        public virtual DbSet<vClientAlert> vClientAlerts { get; set; }
        public virtual DbSet<vClientAlternateName> vClientAlternateNames { get; set; }
        public virtual DbSet<vClientArrestInfo> vClientArrestInfoes { get; set; }
        public virtual DbSet<vClientAssessment> vClientAssessments { get; set; }
        public virtual DbSet<vClientBondInfo> vClientBondInfoes { get; set; }
        public virtual DbSet<vClientCallCode> vClientCallCodes { get; set; }
        public virtual DbSet<vClientCaseFile> vClientCaseFiles { get; set; }
        public virtual DbSet<vClientCommunityFinancialDetail> vClientCommunityFinancialDetails { get; set; }
        public virtual DbSet<vClientContactNote> vClientContactNotes { get; set; }
        public virtual DbSet<vClientDiagnos> vClientDiagnoses { get; set; }
        public virtual DbSet<vClientDrugsOfChoice> vClientDrugsOfChoices { get; set; }
        public virtual DbSet<vClientDrugTreatment> vClientDrugTreatments { get; set; }
        public virtual DbSet<vClientDrugUseHistory> vClientDrugUseHistories { get; set; }
        public virtual DbSet<vClientEducation> vClientEducations { get; set; }
        public virtual DbSet<vClientEmergencyContact> vClientEmergencyContacts { get; set; }
        public virtual DbSet<vClientEmployment> vClientEmployments { get; set; }
        public virtual DbSet<vClientEmploymentSkill> vClientEmploymentSkills { get; set; }
        public virtual DbSet<vClientFederalIncidentReport> vClientFederalIncidentReports { get; set; }
        public virtual DbSet<vClientGroupRegistration> vClientGroupRegistrations { get; set; }
        public virtual DbSet<vClientIdentifier> vClientIdentifiers { get; set; }
        public virtual DbSet<vClientIncidentReport> vClientIncidentReports { get; set; }
        public virtual DbSet<vClientInventory> vClientInventories { get; set; }
        public virtual DbSet<vClientJobHistory> vClientJobHistories { get; set; }
        public virtual DbSet<vClientLeaf> vClientLeaves { get; set; }
        public virtual DbSet<vClientLeaveSchedule> vClientLeaveSchedules { get; set; }
        public virtual DbSet<vClientMedicationLog> vClientMedicationLogs { get; set; }
        public virtual DbSet<vClientMovement> vClientMovements { get; set; }
        public virtual DbSet<vClientOffens> vClientOffenses { get; set; }
        public virtual DbSet<vClientOtherEmployment> vClientOtherEmployments { get; set; }
        public virtual DbSet<vClientOtherInfo> vClientOtherInfoes { get; set; }
        public virtual DbSet<vClientPassSite> vClientPassSites { get; set; }
        public virtual DbSet<vClientPhone> vClientPhones { get; set; }
        public virtual DbSet<vClientPhysicalCharacteristic> vClientPhysicalCharacteristics { get; set; }
        public virtual DbSet<vClientPositiveIncident> vClientPositiveIncidents { get; set; }
        public virtual DbSet<vClientPrescription> vClientPrescriptions { get; set; }
        public virtual DbSet<vClientProgramEnrollmentConfinement> vClientProgramEnrollmentConfinements { get; set; }
        public virtual DbSet<vClientProgramEnrollmentDocket> vClientProgramEnrollmentDockets { get; set; }
        public virtual DbSet<vClientProgramEnrollmentPhas> vClientProgramEnrollmentPhases { get; set; }
        public virtual DbSet<vClientProgramEnrollmentPlacement> vClientProgramEnrollmentPlacements { get; set; }
        public virtual DbSet<vClientProgramEnrollment> vClientProgramEnrollments { get; set; }
        public virtual DbSet<vClientProgramEnrollmentStatu> vClientProgramEnrollmentStatus { get; set; }
        public virtual DbSet<vClientProgramFinancial> vClientProgramFinancials { get; set; }
        public virtual DbSet<vClientRoom> vClientRooms { get; set; }
        public virtual DbSet<vClient> vClients { get; set; }
        public virtual DbSet<vClientScreeningApprovalCondition> vClientScreeningApprovalConditions { get; set; }
        public virtual DbSet<vClientScreeningMedication> vClientScreeningMedications { get; set; }
        public virtual DbSet<vClientScreeningOffens> vClientScreeningOffenses { get; set; }
        public virtual DbSet<vClientScreeningPreviousDenial> vClientScreeningPreviousDenials { get; set; }
        public virtual DbSet<vClientScreeningProgram> vClientScreeningPrograms { get; set; }
        public virtual DbSet<vClientScreeningPsychCondition> vClientScreeningPsychConditions { get; set; }
        public virtual DbSet<vClientScreening> vClientScreenings { get; set; }
        public virtual DbSet<vClientSecurityFlag> vClientSecurityFlags { get; set; }
        public virtual DbSet<vClientSecurityLevel> vClientSecurityLevels { get; set; }
        public virtual DbSet<vClientSecurityProcedure> vClientSecurityProcedures { get; set; }
        public virtual DbSet<vClientSessionNote> vClientSessionNotes { get; set; }
        public virtual DbSet<vClientSignOutHold> vClientSignOutHolds { get; set; }
        public virtual DbSet<vClientStatu> vClientStatus { get; set; }
        public virtual DbSet<vClientTreatmentPlanAction> vClientTreatmentPlanActions { get; set; }
        public virtual DbSet<vClientTreatmentPlanGoal> vClientTreatmentPlanGoals { get; set; }
        public virtual DbSet<vClientTreatmentPlan> vClientTreatmentPlans { get; set; }
        public virtual DbSet<vClientVehicle> vClientVehicles { get; set; }
        public virtual DbSet<vGlobalCode> vGlobalCodes { get; set; }
        public virtual DbSet<vRoomSearchSchedule> vRoomSearchSchedules { get; set; }
        public virtual DbSet<vSecurityProcedureRequirement> vSecurityProcedureRequirements { get; set; }
        public virtual DbSet<vShiftNote> vShiftNotes { get; set; }
        public virtual DbSet<vTask> vTasks { get; set; }
    
        [DbFunction("CaseManagementEntities", "fn_dates")]
        public virtual IQueryable<fn_dates_Result> fn_dates(Nullable<System.DateTime> fIRST_DATE, Nullable<System.DateTime> lAST_DATE)
        {
            var fIRST_DATEParameter = fIRST_DATE.HasValue ?
                new ObjectParameter("FIRST_DATE", fIRST_DATE) :
                new ObjectParameter("FIRST_DATE", typeof(System.DateTime));
    
            var lAST_DATEParameter = lAST_DATE.HasValue ?
                new ObjectParameter("LAST_DATE", lAST_DATE) :
                new ObjectParameter("LAST_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_dates_Result>("[CaseManagementEntities].[fn_dates](@FIRST_DATE, @LAST_DATE)", fIRST_DATEParameter, lAST_DATEParameter);
        }
    
        [DbFunction("CaseManagementEntities", "fn_GetStatisticalCount_ConfinementDays")]
        public virtual IQueryable<fn_GetStatisticalCount_ConfinementDays_Result> fn_GetStatisticalCount_ConfinementDays(Nullable<System.DateTime> periodStartDate, Nullable<System.DateTime> periodEndDate, Nullable<int> managingLocation, Nullable<int> referralSource)
        {
            var periodStartDateParameter = periodStartDate.HasValue ?
                new ObjectParameter("PeriodStartDate", periodStartDate) :
                new ObjectParameter("PeriodStartDate", typeof(System.DateTime));
    
            var periodEndDateParameter = periodEndDate.HasValue ?
                new ObjectParameter("PeriodEndDate", periodEndDate) :
                new ObjectParameter("PeriodEndDate", typeof(System.DateTime));
    
            var managingLocationParameter = managingLocation.HasValue ?
                new ObjectParameter("ManagingLocation", managingLocation) :
                new ObjectParameter("ManagingLocation", typeof(int));
    
            var referralSourceParameter = referralSource.HasValue ?
                new ObjectParameter("ReferralSource", referralSource) :
                new ObjectParameter("ReferralSource", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetStatisticalCount_ConfinementDays_Result>("[CaseManagementEntities].[fn_GetStatisticalCount_ConfinementDays](@PeriodStartDate, @PeriodEndDate, @ManagingLocation, @ReferralSource)", periodStartDateParameter, periodEndDateParameter, managingLocationParameter, referralSourceParameter);
        }
    
        [DbFunction("CaseManagementEntities", "fn_GetStatisticalCount_PlacementHours")]
        public virtual IQueryable<fn_GetStatisticalCount_PlacementHours_Result> fn_GetStatisticalCount_PlacementHours(Nullable<System.DateTime> periodStartDate, Nullable<System.DateTime> periodEndDate, Nullable<int> managingLocation, Nullable<int> referralSource)
        {
            var periodStartDateParameter = periodStartDate.HasValue ?
                new ObjectParameter("PeriodStartDate", periodStartDate) :
                new ObjectParameter("PeriodStartDate", typeof(System.DateTime));
    
            var periodEndDateParameter = periodEndDate.HasValue ?
                new ObjectParameter("PeriodEndDate", periodEndDate) :
                new ObjectParameter("PeriodEndDate", typeof(System.DateTime));
    
            var managingLocationParameter = managingLocation.HasValue ?
                new ObjectParameter("ManagingLocation", managingLocation) :
                new ObjectParameter("ManagingLocation", typeof(int));
    
            var referralSourceParameter = referralSource.HasValue ?
                new ObjectParameter("ReferralSource", referralSource) :
                new ObjectParameter("ReferralSource", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetStatisticalCount_PlacementHours_Result>("[CaseManagementEntities].[fn_GetStatisticalCount_PlacementHours](@PeriodStartDate, @PeriodEndDate, @ManagingLocation, @ReferralSource)", periodStartDateParameter, periodEndDateParameter, managingLocationParameter, referralSourceParameter);
        }
    
        [DbFunction("CaseManagementEntities", "fn_GetStatisticalCounts")]
        public virtual IQueryable<fn_GetStatisticalCounts_Result> fn_GetStatisticalCounts(Nullable<System.DateTime> periodStartDate, Nullable<System.DateTime> periodEndDate, Nullable<int> managingLocation, Nullable<int> referralSource)
        {
            var periodStartDateParameter = periodStartDate.HasValue ?
                new ObjectParameter("PeriodStartDate", periodStartDate) :
                new ObjectParameter("PeriodStartDate", typeof(System.DateTime));
    
            var periodEndDateParameter = periodEndDate.HasValue ?
                new ObjectParameter("PeriodEndDate", periodEndDate) :
                new ObjectParameter("PeriodEndDate", typeof(System.DateTime));
    
            var managingLocationParameter = managingLocation.HasValue ?
                new ObjectParameter("ManagingLocation", managingLocation) :
                new ObjectParameter("ManagingLocation", typeof(int));
    
            var referralSourceParameter = referralSource.HasValue ?
                new ObjectParameter("ReferralSource", referralSource) :
                new ObjectParameter("ReferralSource", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetStatisticalCounts_Result>("[CaseManagementEntities].[fn_GetStatisticalCounts](@PeriodStartDate, @PeriodEndDate, @ManagingLocation, @ReferralSource)", periodStartDateParameter, periodEndDateParameter, managingLocationParameter, referralSourceParameter);
        }
    
        [DbFunction("CaseManagementEntities", "fn_Split")]
        public virtual IQueryable<fn_Split_Result> fn_Split(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Split_Result>("[CaseManagementEntities].[fn_Split](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    }
}
