//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CaseMangement.Repository.Context
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CaseManagementEntities : DbContext
    {
        public CaseManagementEntities()
            : base("name=CaseManagementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Task> Tasks { get; set; }
    
        public virtual ObjectResult<sp_GetTaskCompletedByMonth_Result> sp_GetTaskCompletedByMonth()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTaskCompletedByMonth_Result>("sp_GetTaskCompletedByMonth");
        }
    
        public virtual ObjectResult<sp_GetTasksListComplete_Result> sp_GetTasksListComplete(Nullable<int> taskid, Nullable<int> companyid, Nullable<int> programid, Nullable<int> staffid, Nullable<int> tasktype, Nullable<int> taskstatus)
        {
            var taskidParameter = taskid.HasValue ?
                new ObjectParameter("taskid", taskid) :
                new ObjectParameter("taskid", typeof(int));
    
            var companyidParameter = companyid.HasValue ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(int));
    
            var programidParameter = programid.HasValue ?
                new ObjectParameter("programid", programid) :
                new ObjectParameter("programid", typeof(int));
    
            var staffidParameter = staffid.HasValue ?
                new ObjectParameter("staffid", staffid) :
                new ObjectParameter("staffid", typeof(int));
    
            var tasktypeParameter = tasktype.HasValue ?
                new ObjectParameter("tasktype", tasktype) :
                new ObjectParameter("tasktype", typeof(int));
    
            var taskstatusParameter = taskstatus.HasValue ?
                new ObjectParameter("taskstatus", taskstatus) :
                new ObjectParameter("taskstatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTasksListComplete_Result>("sp_GetTasksListComplete", taskidParameter, companyidParameter, programidParameter, staffidParameter, tasktypeParameter, taskstatusParameter);
        }
    }
}
